/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <behaviors/num_word.dtsi>
#include "zmk-helpers/helper.h"

#define DEFAULT 0
#define LOWER 1
#define UPPER 2
#define NUMS 3
#define GAME 4

// ╭──────┬──────┬──────┬──────┬──────┬──────╮  ╭──────┬──────┬──────┬──────┬──────┬──────╮
//    00     01     02     03    04      05        06     07     08     09     10     11
// ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
//    12     13     14     15    16      17        18     19     20     21     22     23
// ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
//    24     25     26     27    28      29        30     31     32     33     34     35
// ╰──────┴──────┴──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┴──────┴──────┴──────╯
//                         36     37     38        39     40
//                      ╰──────┴──────┴──────╯  ╰──────┴──────╯


// tap: num-word | double-tap: sticky num-layer | hold: num-layer (took from urob configuration, see fork or original repo)
#define SMART_NUM &smart_num NUM 3

// combos
/ { 
    combos {
        compatible = "zmk,combos";
        combo_unlock_zmd_studio {
            timeout-ms = <50>;
            key-positions = <0 11>;
            bindings = <&studio_unlock>;
        };
    }; 
};

&lt {
    tapping-term-ms = <200>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

// todo: configure sticky layers to nums. if layer is enabled let it be until another key besides numbers are pressed
// todo: make a game layer

    keymap {      
        compatible = "zmk,keymap";
        
        default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |      |  Y  |  U   |  I  |  O  |  P  | BSPC |
// |  TAB |  A  |  S  |  D  |  F  |  G  |      |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |      |  N  |  M   |  ,  |  .  |  /  | SHTT |
//                    | CTRL| LWR | SPC |      | ENT | RSE  | ALT |
            bindings = <
   &kp ESC   &kp Q        &kp W        &kp E            &kp R           &kp T            &kp Y        &kp U       &kp I         &kp O        &kp P          &kp BSPC
   &kp TAB   &hm LGUI  A  &hm LSHIFT S &hm LALT D       &hm LCTRL F     &kp G            &kp H        &hm RCTL J  &hm RALT K    &hm RSHIFT L &hm RGUI SEMI  &kp SQT
   &kp LSHFT &kp Z        &kp X        &kp C            &kp V           &kp B            &kp N        &kp M       &kp COMMA     &kp DOT      &kp FSLH       &kp RSHFT
                                       &kp LCTRL        &mo 1           &lt 3 SPACE      &lt NUM RET    &mo 2       &kp LALT
            >;
        };
        lower_layer {
// -----------------------------------------------------------------------------------------
// |      |     | HOME|  UP | END |PG_UP|      |  F1 | F2  | F3  | F4  | F5  | F6   |
// |      |     | LFT | DWN | RGT |PG_DN|      |  F7 | F8  | F9  | F10 | F11 | F12  |
// |EP_TOG|     | C+LF| INS | C+RT| DEL |      | BT0 | BT1 | BT2 | BT3 | BT4 | BTCLR|
//                    |     |     | SPC |      | ENT |     | ALT |
            bindings = <
   &tog 4              &none        &kp HOME     &kp UP       &kp END       &kp PG_UP         &kp F1       &kp F2       &kp F3       &kp F4       &kp F5       &kp F6
   &ext_power EP_ON   &none        &kp LEFT     &kp DOWN     &kp RIGHT     &kp PG_DN         &kp F7       &kp F8       &kp F9       &kp F10      &kp F11      &kp F12
   &ext_power EP_OFF  &none        &kp LC(LEFT) &kp INS      &kp LC(RIGHT) &kp DELETE        &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR   
                                        &none        &none         &none             &none        &none        &none
            >;
        };

        raise_layer {
// -----------------------------------------------------------------------------------------
// |    `   |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
// |        |  ~  |  (  |  -  |  )  |  +  |   |     |  [  |  _  |  ]  | "|" |      |
// |        |     |  <  |  =  |  >  |     |   |     |  {  |     |  }  |  \  |       |
//                      |     |     |     |   |     |     |     |
            bindings = <
   &kp GRAVE   &kp EXCL   &kp AT    &kp HASH    &kp DLLR  &kp PRCNT      &kp CARET &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR  &none
   &none       &kp TILDE  &kp LPAR  &kp MINUS   &kp RPAR  &kp PLUS       &none     &kp LBKT  &kp UNDER  &kp RBKT  &kp PIPE  &none
   &none       &none      &kp LT    &kp EQUAL   &kp GT    &none          &none     &kp LBRC  &none      &kp RBRC  &kp BSLH  &none
                                    &none       &none     &none          &none     &none     &none
            >;
        };

        nums_layer {
// -----------------------------------------------------------------------------------------
// |        |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
// |        |     |     |     |     |     |   |     |     |     |     |     |      |
// |        |     |     |     |     |     |   |     |     |     |     |     |      |
//                      |     |     |     |   |     |     |     |
            bindings = <
   &none       &kp N1     &kp N2    &kp N3      &kp N4    &kp N5         &kp N6    &kp N7    &kp N8     &kp N9    &kp N0    &none
   &none       &none      &none     &none       &none     &none          &none     &none     &none      &none     &none     &none
   &none       &none      &none     &none       &none     &none          &none     &none     &none      &none     &none     &none
                                    &none       &none     &none          &none     &none     &none
            >;
        };
        game_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |      |  Y  |  U   |  I  |  O  |  P  | BSPC |
// |  TAB |  A  |  S  |  D  |  F  |  G  |      |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |      |  N  |  M   |  ,  |  .  |  /  | SHTT |
//                    | CTRL| LWR | SPC |      | ENT | RSE  | ALT |
            bindings = <
   &kp ESC   &kp Q      &kp W       &kp E       &kp R       &kp T           &kp Y        &kp U      &kp I       &kp O       &kp P          &kp BSPC
   &kp TAB   &kp A      &kp S       &kp D       &kp F       &kp G           &kp H        &kp J      &kp K       &kp L       &kp SEMI  &kp SQT
   &kp LSHFT &kp Z      &kp X       &kp C       &kp V       &kp B           &kp N        &kp M      &kp COMMA   &kp DOT     &kp FSLH       &kp RSHFT
                                    &kp LCTRL   &mo 1       &lt 3 SPACE     &lt 3 RET    &mo 2      &kp LALT
            >;
        };

    };
};


